<h3>Fundoubler</h3>
<p>Doubles the speed of a script without sacrificing sync by changing each up or down stroke into an up+down stroke.</p>

<div class="form-check">
    <input type="checkbox" class="form-check-input" @bind="@Match_group_end" id="Match_group_end" title="Ensure final position matches original script end" />
    <label class="form-check-label" for="checkboxExample">Match Group End</label>
</div>
<InputNumber id="short_pause_duration" @bind-Value="short_pause_duration" class="form-control" title="Duration threshold for short pauses (milliseconds)" />
<button class="btn btn-primary mb-2 button1" @onclick="Apply_fundoubler">Apply Fundoubler</button>
<button class="btn btn-primary mb-2 button1" @onclick="reset_script">Reset Fundoubler</button>
@code {
    private bool Match_group_end = true;

    Funscript? funscript;

    private int short_pause_duration = 100;

    [Parameter]
    public bool GrandChildData { get; set; }

    [Parameter]
    public EventCallback<bool> GrandChildDataChanged { get; set; }

    private void Apply_fundoubler()
    {
        funscript = funscript_manager.modified_funscript;
        
        FunDoublerOptions options = new FunDoublerOptions
            {
                MatchGroupEnd = Match_group_end,
                ShortPauseDuration = short_pause_duration
            };
        funscript = funscript_converter_fundoubler.GetDoubleSpeedScript(funscript, options);
        funscript_manager.modified_funscript = funscript;
        funscript_manager.User_Applied_modifier = true;
        GrandChildData = true;
        GrandChildDataChanged.InvokeAsync(GrandChildData);
    }

    private void reset_script()
    {

        funscript_manager.modified_funscript = funscript_manager.starting_funscript;
        funscript_manager.Reset_trigger_canvas_rerender = !funscript_manager.Reset_trigger_canvas_rerender;

    }

}
